------------------------------------------------------------------------------
--                                                                          --
--               Generated by RecordFlux 0.25.0 on 2025-05-01               --
--                                                                          --
--                     Copyright (C) 2018-2025 AdaCore                      --
--                                                                          --
--         SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception          --
--                                                                          --
------------------------------------------------------------------------------

pragma Restrictions (No_Streams);
pragma Ada_2012;
pragma Style_Checks ("N3aAbCdefhiIklnOprStux");
pragma Warnings (Off, "redundant conversion");
with RFLX.CoAP_Client.Session_Environment;
with RFLX.RFLX_Types;
with RFLX.CoAP;
with RFLX.CoAP_Client.Token_Data;
with RFLX.CoAP_Client.Options_And_Payload_Data;

package RFLX.CoAP_Client.Session with
  SPARK_Mode
is

   procedure Get_Method (State : in out RFLX.CoAP_Client.Session_Environment.State; RFLX_Result : out RFLX.CoAP.Method_Code);

   procedure Get_New_Message_ID (State : in out RFLX.CoAP_Client.Session_Environment.State; RFLX_Result : out RFLX.CoAP.Message_ID_Type);

   procedure Get_Random_Token (State : in out RFLX.CoAP_Client.Session_Environment.State; RFLX_Result : out RFLX.CoAP_Client.Token_Data.Structure);

   procedure Get_Options_And_Payload (State : in out RFLX.CoAP_Client.Session_Environment.State; RFLX_Result : out RFLX.CoAP_Client.Options_And_Payload_Data.Structure);

   procedure Put_Options_And_Payload (State : in out RFLX.CoAP_Client.Session_Environment.State; Data : RFLX_Types.Bytes; RFLX_Result : out Boolean);

   procedure Are_Equal_Tokens (State : in out RFLX.CoAP_Client.Session_Environment.State; Left : RFLX_Types.Bytes; Right : RFLX_Types.Bytes; RFLX_Result : out Boolean);

   procedure Put_Client_Error (State : in out RFLX.CoAP_Client.Session_Environment.State; Error_Code : RFLX.CoAP.Client_Error_Response; RFLX_Result : out Boolean);

   procedure Put_Server_Error (State : in out RFLX.CoAP_Client.Session_Environment.State; Error_Code : RFLX.CoAP.Server_Error_Response; RFLX_Result : out Boolean);

end RFLX.CoAP_Client.Session;
